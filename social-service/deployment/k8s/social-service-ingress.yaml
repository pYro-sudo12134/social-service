apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: social-network-ingress
  namespace: social-network-gateway
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, PATCH, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/limit-rps: "100"
    nginx.ingress.kubernetes.io/limit-burst-multiplier: "2"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "5"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "15"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "15"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "4k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"

spec:
  ingressClassName: nginx
  rules:
    - host: monitor.social-network.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 3000
          - path: /prometheus
            pathType: Prefix
            backend:
              service:
                name: prometheus
                port:
                  number: 9090
    - host: social-network.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api-gateway
                port:
                  number: 8080

#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: social-network-ingress
#  namespace: social-network-gateway
#  annotations:
#    nginx.ingress.kubernetes.io/rewrite-target: /
#    nginx.ingress.kubernetes.io/enable-cors: "true"
#    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, PATCH, OPTIONS"
#    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
#    nginx.ingress.kubernetes.io/limit-rps: "100"
#    nginx.ingress.kubernetes.io/limit-burst-multiplier: "2"
#    nginx.ingress.kubernetes.io/proxy-connect-timeout: "5"
#    nginx.ingress.kubernetes.io/proxy-read-timeout: "15"
#    nginx.ingress.kubernetes.io/proxy-send-timeout: "15"
#    nginx.ingress.kubernetes.io/proxy-buffer-size: "4k"
#    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
#    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
#    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
#
#spec:
#  ingressClassName: nginx
#  rules:
#    - host: social-network-front.local
#      http:
#        paths:
#          - path: /
#            pathType: Prefix
#            backend:
#              service:
#                name: photo-sharing-frontend
#                port:
#                  number: 3000
#          - path: /api
#            pathType: Prefix
#            backend:
#              service:
#                name: api-gateway
#                port:
#                  number: 8080