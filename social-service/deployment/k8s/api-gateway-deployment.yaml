apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: social-network-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
      version: blue
  template:
    metadata:
      labels:
        app: api-gateway
        version: blue
    spec:
      serviceAccountName: api-gateway-sa
      containers:
        - name: api-gateway
          image: api-gateway:latest
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          env:
            - name: USER_SERVICE_URL
              value: "http://user-service.social-network-users:8081"
            - name: IMAGE_SERVICE_URL
              value: "http://image-service.social-network-images:8082"
            - name: COMMENT_LIKE_SERVICE_URL
              value: "http://comment-like-service.social-network-comments:8083"
            - name: ACTIVITY_SERVICE_URL
              value: "http://activity-service.social-network-activities:8085"
            - name: SPRING_DATA_REDIS_HOST
              value: "redis.social-network-db"
            - name: SPRING_DATA_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: password
            - name: SPRING_DATA_REDIS_PORT
              value: "6379"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: social-network-gateway
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/actuator/prometheus"
    prometheus.io/scheme: "http"
spec:
  type: ClusterIP
  selector:
    app: api-gateway
    version: blue
  ports:
    - port: 8080
      targetPort: 8080